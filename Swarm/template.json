{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "networkInterfaceNameMgr": {
            "type": "string"
        },
        "networkSecurityGroupNameMgr": {
            "type": "string"
        },
        "networkSecurityGroupNameWorker": {
            "type": "string"
        },
        "networkSecurityGroupRulesMgr": {
            "type": "array"
        },
        "networkSecurityGroupRulesWorker": {
            "type": "array"
        },
        "subnetName": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "addressPrefixes": {
            "type": "array"
        },
        "subnets": {
            "type": "array"
        },
        "publicIpAddressNameMgr": {
            "type": "string"
        },
        "publicIpAddressNameWorker": {
            "type": "string"
        },
        "publicIpAddressType": {
            "type": "string"
        },
        "publicIpAddressSku": {
            "type": "string"
        },
        "dnsLabelPrefix": {
            "type": "string"
        },
        "virtualMachineNameMgr": {
            "type": "string"
        },
        "vmssName": {
            "type": "string"
        },
        "osDiskType": {
            "type": "string"
        },
        "virtualMachineSizeMgr": {
            "type": "string"
        },
        "virtualMachineSizeWorker": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "email": {
            "type": "string"
        },
        "count": {
            "type": "int"
        },
        "images": {
            "type": "string"
        },
        "additionalScriptMgr": {
            "type": "string"
        },
        "additionalScriptWorker": {
            "type": "string"
        },
        "builtInRoleType": {
            "type": "string",
            "defaultValue": "Owner"
        },
        "rbacGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "A new GUID used to identify the role assignment"
            }
        },
        "vmImage": {
            "type": "object"
        },
        "branch": {
            "type": "string"
        },
        "userObjectId": {
            "type": "string"
        }
    },
    "variables": {
        "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
        "nsgIdMgr": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameMgr'))]",
        "nsgIdWorker": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameWorker'))]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "vhdContainerName": "[concat(variables('namingInfix'), 'vhd')]",
        "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "storageAccountNamePrefix": "[toLower(concat(substring(uniqueString(resourceGroup().id), 0, 9), variables('namingInfix'), 'sa'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "name": "[parameters('networkInterfaceNameMgr')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameMgr'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressNameMgr'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressNameMgr'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgIdMgr')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[parameters('networkSecurityGroupNameMgr')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[parameters('networkSecurityGroupRulesMgr')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[parameters('networkSecurityGroupNameWorker')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[parameters('networkSecurityGroupRulesWorker')]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addressPrefixes')]"
                },
                "subnets": "[parameters('subnets')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-02-01",
            "name": "[parameters('publicIpAddressNameMgr')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIpAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[parameters('virtualMachineNameMgr')]",
            "location": "[parameters('location')]",
            "identity": { 
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceNameMgr'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSizeMgr')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": "[parameters('vmImage')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceNameMgr'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineNameMgr')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                }
            }
        },
        {
            "apiVersion": "2017-09-01",
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[parameters('rbacGuid')]",
            "properties": {
                "roleDefinitionId": "[variables(parameters('builtInRoleType'))]",
                "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineNameMgr')), '2017-12-01', 'Full').identity.principalId]",
                "scope": "[resourceGroup().id]"
            },
             "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineNameMgr'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat(variables('storageAccountNamePrefix'), copyIndex())]",
            "location": "[parameters('location')]",
            "apiVersion": "2019-06-01",
            "kind": "Storage",
            "sku": {
                "name": "Premium_LRS"
            },
            "copy": {
                "name": "storageLoop",
                "count": 5
            },
            "properties": {}
        },
        {
            "name": "[parameters('vmssName')]",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('vnetId')]",
                "[variables('nsgIdWorker')]",
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineNameMgr'))]",
                "[concat('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountNamePrefix'), '0'))]",
                "[concat('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountNamePrefix'), '1'))]",
                "[concat('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountNamePrefix'), '2'))]",
                "[concat('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountNamePrefix'), '3'))]",
                "[concat('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountNamePrefix'), '4'))]"
            ],
            "sku": {
                "name": "[parameters('virtualMachineSizeWorker')]",
                "tier": "Standard",
                "capacity": "[int(parameters('count'))]"
            },
            "properties": {
                "overprovision": true,
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "singlePlacementGroup": true,
                "virtualMachineProfile": {
                    "storageProfile": {
                        "imageReference": "[parameters('vmImage')]",
                        "osDisk": {
                            "createOption": "fromImage",
                            "caching": "ReadWrite",
                            "name": "[concat(variables('namingInfix'), 'osdisk')]",
                            "vhdContainers": [
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountNamePrefix'), '0')), '2019-06-01').primaryEndpoints.blob, variables('vhdContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountNamePrefix'), '1')), '2019-06-01').primaryEndpoints.blob, variables('vhdContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountNamePrefix'), '2')), '2019-06-01').primaryEndpoints.blob, variables('vhdContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountNamePrefix'), '3')), '2019-06-01').primaryEndpoints.blob, variables('vhdContainerName'))]",
                                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountNamePrefix'), '4')), '2019-06-01').primaryEndpoints.blob, variables('vhdContainerName'))]"
                            ]
                        }
                    },
                    "priority": "Regular",
                    "osProfile": {
                        "computerNamePrefix": "[variables('namingInfix')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(parameters('vmssName'), 'Nic')]",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(parameters('vmssName'), 'IpConfig')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[variables('subnetRef')]"
                                                },
                                                "publicIpAddressConfiguration": {
                                                    "name": "[parameters('publicIpAddressNameWorker')]",
                                                    "properties": {
                                                        "idleTimeoutInMinutes": 15
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "networkSecurityGroup": {
                                        "id": "[variables('nsgIdWorker')]"
                                    }
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "CustomVMSSScript",
                                "properties": {
                                    "publisher": "Microsoft.Compute",
                                    "type": "CustomScriptExtension",
                                    "typeHandlerVersion": "1.9",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": [
                                            "[concat('https://raw.githubusercontent.com/tfenster/BC-Swarm/', parameters('branch'), '/Swarm/workerSetupTasks.ps1')]"
                                        ]
                                    },
                                    "protectedSettings": {
                                        "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File workerSetupTasks.ps1 -images \"', parameters('images'), '\" -branch ', parameters('branch'), ' -additionalScript \"', parameters('additionalScriptWorker'), '\" -resourceGroupName ', resourceGroup().name)]"
                                    }
                                }
                            }
                        ]
                    }
                },
                "platformFaultDomainCount": 5
            },
            "identity": {
                "type": "systemAssigned"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2015-06-15",
            "name": "[concat(parameters('virtualMachineNameMgr'),'/script1')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineNameMgr'))]",
                "[concat('Microsoft.KeyVault/vaults/SwarmVault-', resourceGroup().name)]"
            ],
            "location": "[resourceGroup().location]",
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat('https://raw.githubusercontent.com/tfenster/BC-Swarm/', parameters('branch'), '/Swarm/mgrInitSwarmAndSetupTasks.ps1')]"
                    ]
                }, "protectedSettings": {
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File mgrInitSwarmAndSetupTasks.ps1 -externaldns ', reference(parameters('publicIPAddressNameMgr')).dnsSettings.fqdn, ' -email ', parameters('email'), ' -branch ', parameters('branch'), ' -additionalScript \"', parameters('additionalScriptMgr'), '\" -resourceGroupName ', resourceGroup().name)]"
                }
            }
        },
        {
            "apiVersion": "2018-02-14",
            "name": "[concat('SwarmVault-', resourceGroup().name)]",
            "location": "[parameters('location')]",
            "type": "Microsoft.KeyVault/vaults",
            "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true,
                "enableRbacAuthorization": false,
                "accessPolicies": [
                    {
                        "objectId": "[parameters('userObjectId')]",
                        "tenantId": "[subscription().tenantId]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    },
                    {
                        "objectId": "[reference(concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineNameMgr')), '2017-12-01', 'Full').identity.principalId]",
                        "tenantId": "[subscription().tenantId]",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete"
                            ],
                            "certificates": []
                        }
                    },
                    {
                        "objectId": "[reference(concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName')), '2017-12-01', 'Full').identity.principalId]",
                        "tenantId": "[subscription().tenantId]",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "Get",
                                "List"
                            ],
                            "certificates": []
                        }
                    }
                ],
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "Standard",
                    "family": "A"
                },
                "enableSoftDelete": "false",
                "networkAcls": {
                    "value": {
                        "defaultAction": "allow",
                        "bypass": "AzureServices",
                        "ipRules": [],
                        "virtualNetworkRules": []
                    }
                }
            },
            "tags": {},
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineNameMgr'))]",
                "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]"
            ]
        }
    ],
    "outputs": {
    }
}